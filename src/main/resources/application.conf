akka {
  loggers = [akka.event.slf4j.Slf4jLogger]
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = off
      lifecycle = off
    }
  }
  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]
    min-nr-of-members = 2
    metrics.enabled = off
    auto-down-unreachable-after = 10s
  }

  kafka.consumer {
    poll-interval = 50ms
    poll-timeout = 50ms
    stop-timeout = 30s
    close-timeout = 20s
    commit-timeout = 15s
    wakeup-timeout = 3s
    max-wakeups = 10
    use-dispatcher = "akka.kafka.default-dispatcher"
    kafka-clients {
      enable.auto.commit = false
    }
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }
}

cassandra-journal {
  contact-points = ["cassandra-seed-1"]
}

cassandra-snapshot-store {
  contact-points = ["cassandra-seed-1"]
}

clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 1600
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
  seed-port = 1600
  seed-port = ${?SEED_PORT_1600_TCP_PORT}
  cluster.name = clustering-cluster
}